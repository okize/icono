// Generated by CoffeeScript 1.6.3
var Q, fs, mime, path, pretty, svg2png, svgo, _;

fs = require('fs');

path = require('path');

mime = require('mime');

_ = require('underscore');

Q = require('q');

svgo = new (require('svgo'))();

svg2png = require('svg2png');

pretty = require('cssbeautify');

module.exports = {
  encodeImage: function(data, type, format) {
    var encoded, formatMap, str;
    str = ',';
    formatMap = {
      'svg': '\'data:image/svg+xml',
      'png': '\'data:image/png'
    };
    if (type === 'base64') {
      str = ';base64,';
      encoded = new Buffer(data).toString('base64');
    } else {
      encoded = encodeURIComponent(new Buffer(data).toString());
    }
    return formatMap[format] + str + encoded + '\'';
  },
  roundNum: function(num) {
    return Math.round(num).toString();
  },
  hasSpace: function(filename) {
    return filename.indexOf(' ') >= 0;
  },
  replaceSpaces: function(filename, inDir) {
    var newFilename;
    if (this.hasSpace(filename) === true) {
      newFilename = filename.split(' ').join('-');
      return fs.renameSync(inDir + '/' + filename, inDir + '/' + newFilename);
    }
  },
  trimExt: function(filename) {
    return filename.replace(/\.[^/.]+$/, '');
  },
  filterNonSvgFiles: function(files, dir) {
    return _.filter(files, function(file) {
      return fs.statSync(path.join(dir + '/' + file)).isFile() === true && mime.lookup(file) === 'image/svg+xml';
    });
  },
  optimizeSvg: function(data) {
    var d;
    d = Q.defer();
    svgo.optimize(data, function(result) {
      if (result.error) {
        d.reject(new Error(result.error));
      }
      return d.resolve(result);
    });
    return d.promise;
  },
  saveSvgAsPng: function(inFile, outFile) {
    var d;
    d = Q.defer();
    svg2png(inFile, outFile, function(err) {
      if (err) {
        d.reject(new Error(err));
      }
      return d.resolve(outFile);
    });
    return d.promise;
  },
  createCssRules: function(results, opts) {
    var cssClassnamePrefix, str;
    cssClassnamePrefix = opts.classname != null ? opts.classname : '';
    str = '';
    _.each(results, function(res, i) {
      str += ("." + (cssClassnamePrefix + res.name) + "{") + ("height:" + res.height + "px;") + ("width:" + res.width + "px;") + ("background-image:url(" + res.svgdatauri + ");") + "}" + (".no-inlinesvg ." + (cssClassnamePrefix + res.name) + "{") + ("background-image:url(" + res.pngdatauri + ");") + "}";
      if (!opts.nopng) {
        return str += (".no-datauri ." + res.name + "{") + ("background-image:url('" + res.pngpath + "');") + "}";
      }
    });
    return str;
  },
  prettyCss: function(str) {
    return pretty(str);
  }
};
